Command,Syntax,Description
ABS,ABS(number),Returns the absolute value of the given number. Example: ABS(-7) = 7
ACOS,ACOS(number),Returns the arc cosine of a number.  The result is in radians. Example: ACOS(-1) = 3.14159265358979
AREA,"AREA(polygon, units)","Returns the area of a polygon or multipolygon. Example: AREA([Geometry], 'km')"
ASIN,ASIN(number),Returns the arc sine of a number.  The result is in radians. Example: ASIN(1) = 1.5707963267949
ATAN,ATAN(number),Returns the arc tangent of a number.  The result is in radians. Example: ATAN(180) = 1.5652408283942
ATAN2,"ATAN2(y number, x number)","Returns the arc tangent of two given numbers (x and y). The result is in radians. Example: ATAN2(2, 1) = 1.10714871779409"
ATTR,ASCII(string),"Returns the value of the given expression if it only has a single value for all rows in the group, otherwise it displays an asterisk (*). Null values are . Example: ATTR([Market])"
ASCII,ATTR(expression),Returns the ASCII code value of the first character in a string. Example: ASCII('authors') = 97
AVG,AVG(expression),Returns the average of all the values in the expression. AVG can be used with numeric fields only. Example: AVG([Profit])
BUFFER,"BUFFER(geometry, number, units)","Returns a buffer of the given distance around a . Example: BUFFER(MAKEPOINT(47.59, -122.32), 5, 'km')"
CASE,CASE <expr> WHEN <value1> THEN <return1> ... [ELSE <else>] END,Finds the first <value> that matches <expr> and returns the corresponding <return. Example: CASE [RomanNumeral] WHEN \xE2\x80\x98I\xE2\x80\x99 THEN 1 WHEN \xE2\x80\x98II\xE2\x80\x99 THEN 2 ELSE 3 END
CHAR,CHAR(integer),Converts the given integer ASCII code into a character. Example: CHAR(65) = 'A'
COLLECT,COLLECT(spatial),Aggregate calculation that combines the values in the argument field. COLLECT can be used with spatial fields only. Null values are ignored. Example: COLLECT([Geometry])
UNION,,Aggregate calculation that combines the values in the argument field into a single spatial. UNION can be used with spatial fields only. Null values are ignored. Example: UNION([Geometry])
CONTAINS,"CONTAINS(string, substring)","Returns true if the string contains the substring. Example: CONTAINS('Calculation', 'alcu') is true"
CORR,"CORR(expr1, expr2)","Returns the Pearson correlation coefficient of two expressions. Example: CORR([Sales], [Profit])"
COS,COS(angle),Returns the cosine of an angle. Specify the angle in . Example: COS(PI()/4) = 0.707106781186548
COT,COT(angle),Returns the cotangent of an angle. Specify the angle in . Example: COT(PI()/4) = 1
COUNT,COUNT(expression),Returns the number of items in a group. NULL values are not . Example: COUNT([Customer ID])
COVAR,"COVAR(expr1, expr2)","Returns the sample covariance of two . Example: COVAR([Sales], [Profit])"
COVARP,"COVARP(expr1, expr2)","Returns the population covariance of two . Example: COVARP([Sales], [Profit])"
COUNTD,COUNTD(expression),Returns the number of distinct items in a group. NULL values are not counted.  Each unique value is counted only . Example: COUNTD([Region])
DATE,DATE(expression),"Returns a date given a number, string, or date expression. Example: DATE('2006-06-15 14:52') = 2006-06-15 \nNote that the quotation marks are required."
DATEADD,"DATEADD(date_part, interval, date)","Adds an increment to the specified date and returns the new date. The increment is defined by the interval and the date_part. Example: DATEADD('month', 3, #2004-04-15#) = 2004-07-15 12:00:00 AM"
DATEDIFF,"DATEDIFF(date_part, start_date, end_date, [start_of_week])","Returns the difference between two dates where start_date is subtracted from end_date. The difference is expressed in units of date_part. If start_of_week is omitted, the week start day is determined by the start day configured for the data . Example: DATEDIFF('month', #2004-07-15#, #2004-04-03#, 'sunday') = -3"
DATENAME,"DATENAME(date_part, date, [start_of_week])","Returns a part of the given date as a string, where the part is defined by date_part. If start_of_week is omitted, the week start day is determined by the start day configured for the data . Example: DATENAME('month', #2004-04-15#) = 'April'"
DATEPARSE,"DATEPARSE(format, string)","Converts a string to a date in the specified format. Example: DATEPARSE ('dd.MMMM.yyyy', '15.April.2004') = 2004-04-15 12:00:00 AM"
DATEPART,"DATEPART(date_part, date, [start_of_week])","Returns a part of the given date as an integer where the part is defined by date_part. If start_of_week is omitted, the week start day is determined by the start day configured for the data . Example: DATEPART('month', #2004-04-15#) = 4"
DATETIME,DATETIME(expression),"Returns a datetime given a number, string, or date expression. Example: DATETIME('April 15, 2004 07:59:00')  \nNote that the quotation marks are required."
DATETRUNC,"DATETRUNC(date_part, date, [start_of_week])","Truncates the specified date to the accuracy specified by the date_part and returns the new date. If start_of_week is omitted, the week start day is determined by the start day configured for the data . Example: DATETRUNC('quarter', #2004-08-15#) = 2004-07-01 12:00:00 AM"
DAY,DAY(date),Returns the day of the given date as an integer. Example: DAY(#2004-04-12#) = 12
DEGREES,DEGREES(number),Converts a number in radians to . Example: DEGREES(PI()/4) = 45.0
DISTANCE,"DISTANCE(start, end, units)","Returns the distance between two points. Example: DISTANCE(MAKEPOINT(47.59, -122.32), MAKEPOINT(-33.85, 150.92), 'km')"
ENDSWITH,"ENDSWITH(string, substring)","Returns true if the string ends with the substring (trailing whitespace is ignored. Example: ENDSWITH('Calculation', 'ion') is true"
EXP,EXP(number),Returns e raised to the power of the given number. Example: EXP(5) = e^5
FIND,"FIND(string, substring, [start])","Returns the position of a substring within a string, or 0 if the substring isn't found. If the start argument is defined, any instances of substring that appear before the start position are ignored. The first character in the string is position 1. Example: FIND('Calculation', 'alcu') = 2"
FINDNTH,"FINDNTH(string, substring, occurrence)","Returns the position of the nth occurrence of a substring within a string, or 0 if that occurrence of the substring isn't found. The first character in the string is position 1. Example: FINDNTH('Calculation', 'a', 2) = 7"
FLOAT,FLOAT(expression),Returns a float given an expression of any type. This function requires unformatted numbers which means exclude commas and other symbols. Example: FLOAT('3')= 3.000
FULLNAME,FULLNAME(),Returns the full name for the current user. This is the Tableau Server or Tableau Cloud full name when the user is signed in; otherwise it is the local or network full name for the Tableau Desktop user.
HASH,HASH(expression),"Converts any value to a whole number. Two values are unlikely to convert to the same number, but this is not guaranteed. Consecutive values are also unlikely to map to consecutive numbers."
ISFULLNAME,ISFULLNAME(string),"Returns true if the current user's full name matches the specified full name, or false if it does not match. This function uses the Tableau Server or Tableau Cloud full name when the user is signed in; otherwise it uses the local or network full name for the Tableau Desktop user."
ISMEMBEROF,ISMEMBEROF(string),"Returns true if the current user is a member of the given group, false otherwise.  This uses the Tableau Server to resolve group membership if logged on, otherwise it always returns false."
IF,IF <expr> THEN <then> [ELSEIF <expr2> THEN <then2> ...] [ELSE <else>] END,Tests a series of expressions returning the <then> value for the first true <expr. Example: IF [Profit] > 0 THEN 'Profitable' ELSEIF [Profit] = 0 THEN 'Breakeven' ELSE 'Loss' END
IFNULL,"IFNULL(expr1, expr2)","Returns <expr1> if it is not null, otherwise returns <expr2>.. Example: IFNULL([Profit], 0)"
IIF,"IIF(test, then, else, [unknown])","Checks whether a condition is met, and returns one value if TRUE, another value if FALSE, and an optional third value or NULL if unknown. Example: IIF([Profit] > 0, 'Profit', 'Loss')"
IN,INT(expression),"Returns TRUE if <expr> matches any value in <expr1>. <. can be a Set, or a list of literal values or a combined . Example: SUM([Cost]) IN (1000, 99 + 100, . Example: [Combined Field] IN ({'first', 2}, {'a', 3. Example: [Field] IN [. Example: [Combined Field] IN [Fixed Set]"
INT,ISUSERNAME(string),Returns an integer given an expression. This function truncates results to the closest integer toward zero. Example: INT(8.0/3.0) = 2 or INT(-9.7) = -9
ISDATE,ISDATE(string),Returns true if a given string is a valid date. Example: ISDATE('2004-04-15') = True
ISNULL,ISNULL(expression),Returns true if the expression is null. Example: ISNULL([Profit])
ISOQUARTER,ISOQUARTER(date),Returns the ISO8601 week-based quarter of a given date as an integer. Example: ISOQUARTER(#2004-03-29#) = 2
ISOWEEK,ISOWEEK(date),Returns the ISO8601 week-based week of a given date as an integer. Example: ISOWEEK(#2004-03-29#) = 14
ISOWEEKDAY,ISOWEEKDAY(date),Returns the ISO8601 week-based weekday of a given date as an integer. Example: ISOWEEKDAY(#2004-03-29#) = 1
ISOYEAR,ISOYEAR(date),Returns the ISO8601 week-based year of a given date as an integer. Example: ISOYEAR(#2003-12-29#) = 2004
LEFT,"LEFT(string, num_chars)","Returns the specified number of characters from the start of the given string. Example: LEFT('Calculation', 4) = 'Calc'"
LEN,LEN(string),Returns the number of characters in the given string. Example: LEN('Calculation') = 11
LN,LN(number),Returns the natural logarithm of the given number. Returns Null if the number is less than or equal to . Example: LN(EXP(5)) = 5
LOG,"LOG(number, [base])","Returns the logarithm of a number for the given base. If the base value is omitted, base 10 is . Example: LOG(100) . 2Example: LOG(256, 2) = 8"
LOWER,LOWER(string),Converts a text string to all lowercase letters. Example: LOWER('PRODUCT') = 'product'
LTRIM,LTRIM(string),Returns the string with any leading spaces removed. Example: LTRIM(' Sales') = 'Sales'
MAKEDATE,"MAKEDATE(year, month, day)","Returns a date value constructed from a year, a month and a day of the month. Example: MAKEDATE( 2014, 3, 18 )"
MAKEDATETIME,"MAKEDATETIME(date, time)","Returns a date and time value given a date expression and a time expression. Example: MAKEDATETIME(#2012-11-12#, #07:59:00#)"
MAKETIME,"MAKETIME(hour, minute, second)","Returns a time value constructed from hours, minutes and seconds. Example: MAKETIME( 14, 52, 40 )"
MAKELINE,"MAKELINE(start, end)","Returns a line constructed from two points. Example: MAKELINE([Start], [End])"
MAKEPOINT,"MAKEPOINT(number, number) or MAKEPOINT(number, number, number)","Returns a spatial object constructed from latitude and longitude or a spatial object when constructed from an x-coordinate, y-coordinate, and . MAKEPOINT([Latitude],[Longitude]) or MAKEPOINT([x_coordinate],[y_coordinate],102748)"
VALIDATE,,Returns the given spatial if it is valid; a corrected version if it can be corrected; or null otherwise. Example: VALIDATE([spatial]) -> spatial
MAX,"MAX(expression) or MAX(expr1, expr2)",Returns the maximum of a single expression across all records or the maximum of two expressions for each record. Example: MAX([Sales])
MEDIAN,MEDIAN(expression),Returns the median of a single expression. MEDIAN can be used with numeric fields only. Null values are . Example: MEDIAN([Profit])
PERCENTILE,"PERCENTILE(expression, number)","Aggregate calculation that returns the percentile value from the given expression corresponding to the specified number. Valid values for the number are 0 through 1. PERCENTILE([expression], 0.50) will always return the median value in the . Example: PERCENTILE([Sales], 0.90)"
MID,"MID(string,start,[length])","Returns the characters from the middle of a text string given a starting position and a length. The first character in the string is position 1. If the length is not included, all characters to the end of the string are returned. If the length is included, up to that many characters are returned. Example: MID('Tableau Software',9) = 'Software. Example: MID('Tableau Software',2,4) = 'able'"
MIN,"MIN(expression) or MIN(expr1, expr2)",Returns the minimum of an expression across all records or the minimum of two expressions for each record. Example: MIN([Profit])
MONTH,MONTH(date),Returns the month of a given date as an integer. Example: MONTH(#2004-04-12#) = 4
NOW,NOW(),Returns the current date and time. Example: NOW() = 2004-05-12 1:08:21 PM
PI,PI(),Returns the numeric constant . Example: PI() = 3.14159265358979
POWER,"POWER(number,power)","Returns the result of a number raised to the given power. Example: POWER(5,2) = 5^2 = 25"
QUARTER,QUARTER(date),Returns the quarter of a given date as an integer. Example: QUARTER(#2004-04-12#) = 2
RADIANS,RADIANS(number),Converts a number in degrees to radians.
RANDOM,RANDOM(),Returns a random number between zero and one. The number will not be the same for different rows or for different . Example: RANDOM()
REPLACE,"RIGHT(string, num_chars)","Returns a string in which every occurrence of the substring is replaced with the replacement string. If the substring is not found, the string is unchanged. Example: REPLACE('Calculation', 'ion', 'ed') = 'Calculated'"
RIGHT,"REPLACE(string, substring, replacement)","Returns the specified number of characters from the end of the given string. Example: RIGHT('Calculation', 4) = 'tion'"
ROUND,"ROUND(number, [decimals])","Rounds a number to the nearest integer or to a specified number of decimal places. Example: ROUND(3.1415, 1) = 3.1"
RTRIM,RTRIM(string),Returns the string with any trailing spaces removed. Example: RTRIM('Market ') = 'Market'
SIGN,SIGN(number),"Returns the sign of a number: 1 if the number is positive, zero if the number is zero, or -1 if the number is . Example: SIGN([Profit])"
SIN,SIN(angle),Returns the sine of an angle. Specify the angle in . Example: SIN(PI()/4) = 0.707106781186548
SPACE,SPACE(number),Returns a string composed of the specified number of repeated spaces. Example: SPACE(2) = '  '
SPLIT,"SPLIT(string, delimiter, token number)","Returns a substring from a string, as determined by a delimiter extracting the characters from the beginning or end of the string. Example: SPLIT('a-b-c-d', '-', 2) = 'b. Example: SPLIT('a-b-c-d', '-', -2) = 'c'"
SQRT,SQRT(number),Returns the square root of a number. Example: SQRT(25) = 5
SQUARE,SQUARE(number),Returns the square of a given number. Example: SQUARE(5) = 25
STARTSWITH,"STARTSWITH(string, substring)","Returns true if the string starts with the substring. Example: STARTSWITH('Calculation', 'Ca') is true"
STDEV,STDEV(expression),Returns the sample standard deviation of the . Example: STDEV([Profit])
STDEVP,STDEVP(expression),Returns the population standard deviation of the . Example: STDEVP([Profit])
STR,STR(expression),Returns a string given an expression. Example: STR([Age]) returns all of the values of the Age measure as strings.
SUM,SUM(expression),Returns the sum of all the values in the expression. SUM can be used with numeric fields only. Null values are . Example: SUM([Profit])
TAN,TAN(angle),Returns the tangent of an angle. Specify the angle in . Example: TAN(PI()/4) = 1.0
TODAY,TODAY(),Returns the current date. Example: TODAY() = 2004-05-12
TRIM,TRIM(string),Returns the string with both leading and trailing spaces removed. Example: TRIM(' Budget  ') = 'Budget'
UPPER,UPPER(string),Converts a text string to all uppercase letters. Example: UPPER('product') = 'PRODUCT'
USERDOMAIN,USERDOMAIN(),Returns the domain for the current user when the user is signed on to Tableau Server. Returns the Windows domain if the Tableau Desktop user is on a domain. Otherwise this function returns a null string.
USERNAME,USERNAME(),Returns the username for the current user. This is the Tableau Server or Tableau Cloud username when the user is signed in; otherwise it is the local or network username for the Tableau Desktop user.
VAR,VAR(expression),Returns the sample variance of the . Example: VAR([Profit])
VARP,VARP(expression),Returns the population variance of the . Example: VARP([Profit])
WEEK,WEEK(date),Returns the week of a given date as an integer. Example: WEEK(#2004-04-12#) = 16
YEAR,YEAR(date),Returns the year of a given date as an integer. Example: YEAR(#2004-04-12#) = 2004
ZN,ZN(expression),"Returns <expression> if it is not null, otherwise returns zero. Example: ZN([Profit])"
INDEX,INDEX(),Returns the index of the current row in the . Example (for the first row in the partition): INDEX( ) = 1
FIRST,FIRST(),Returns the number of rows from the current row to the first row in the . Example (current row index is 3 of 7):\nFIRST( ) = -2
LAST,LAST(),Returns the number of rows from the current row to the last row in the . Example (current row is index 3 of 7):\nLAST ( ) = 4
SIZE,SIZE(),Returns the number of rows in the . Example (partition has 5 rows):\nSIZE( ) = 5
TOTAL,TOTAL(expression),Returns the total for the given . Example: TOTAL(AVG([Profit])) = AVG(Profit) for all database rows that contribute to the partition
LOOKUP,"LOOKUP(expression, [offset])","Returns the value of the given expression in a target row, specified as a relative offset from the current row. Use FIRST() + n and LAST() - n for a target relative to the first/last rows in the partition. If offset is omitted, the Compare To row may be set on the field menu. Returns NULL if the target row cannot be . Example: LOOKUP(SUM([Profit]), FIRST( ) + 2)  = SUM(Profit) in the third row of the partition"
PREVIOUS_VALUE,PREVIOUS_VALUE(expression),Returns the value of this calculation in the previous row. Returns the given expression if the current row is the first row of the . Example: SUM([Profit]) + PREVIOUS_VALUE(0) = running sum . ProfitExample: SUM([Profit]) * PREVIOUS_VALUE(1) = running product of SUM(Profit)
IN,,<expr> IN <expr1>
WINDOW_AVG,"WINDOW_AVG(expression, [start, end])","Returns the average of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_AVG(SUM([Profit]), -2, 0) = average of SUM(Profit) from the two previous rows to the current row"
WINDOW_COUNT,"WINDOW_COUNT(expression, [start, end])","Returns the count of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_COUNT(SUM([Profit]), -2, 0) = count of SUM(Profit) from the two previous rows to the current row"
WINDOW_MAX,"WINDOW_MAX(expression, [start, end])","Returns the maximum of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_MAX(MAX([Profit]), -2, 0) = maximum of Profit from the two previous rows to the . rowExample: WINDOW_MAX(SUM([Profit]), -2, 0) = maximum of SUM(Profit) from the two previous rows to the current row"
WINDOW_MEDIAN,"WINDOW_MEDIAN(expression, [start, end])","Returns the median of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_MEDIAN(SUM([Profit]), -2, 0) = median of SUM(Profit) from the two previous rows to the current row"
WINDOW_MIN,"WINDOW_MIN(expression, [start, end])","Returns the minimum of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_MIN(MIN([Profit]), -2, 0) = minimum of Profit from the two previous rows to the . rowExample: WINDOW_MIN(SUM([Profit]), -2, 0) = minimum of SUM(Profit) from the two previous rows to the current row"
WINDOW_PERCENTILE,"WINDOW_PERCENTILE(expression, number, [start, end])","Returns the value corresponding to the specified percentile within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_PERCENTILE (SUM([Profit]),0.75, -2., 0)) =  75th percentile of SUM(Profit) from the two previous rows to the current row"
WINDOW_STDEV,"WINDOW_STDEV(expression, [start, end])","Returns the sample standard deviation of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_STDEV(SUM([Profit]), -2, 0) = std. dev. of SUM(Profit) from the two previous rows to the current row"
WINDOW_STDEVP,"WINDOW_STDEVP(expression, [start, end])","Returns the population standard deviation of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_STDEVP(SUM([Profit]), -2, 0) = std. dev. of SUM(Profit) from the two previous rows to the current row"
WINDOW_SUM,"WINDOW_SUM(expression, [start, end])","Returns the sum of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_SUM(SUM([Profit]), -2, 0) = sum of SUM(Profit) from the two previous rows to the current row"
WINDOW_VAR,"WINDOW_VAR(expression, [start, end])","Returns the sample variance of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_VAR(SUM([Profit]), -2, 0) = variance of SUM(Profit) from the two previous rows to the current row"
WINDOW_VARP,"WINDOW_VARP(expression, [start, end])","Returns the population variance of the expression within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition.  If start and end are omitted, the entire partition is . Example: WINDOW_VARP(SUM([Profit]), -2, 0) = variance of SUM(Profit) from the two previous rows to the current row"
WINDOW_COVAR,"WINDOW_COVAR(expr1, expr2, [start, end])","Returns the sample covariance of two expressions within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is . Example: WINDOW_COVAR(SUM([Profit]), SUM([Sales]), -2, 0) = covariance of SUM(Profit) and SUM(Sales) from the 2 previous rows to the current row"
WINDOW_COVARP,"WINDOW_COVARP(expr1, expr2, [start, end])","Returns the population covariance of two expressions within the window.  The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is . Example: WINDOW_COVARP(SUM([Profit]), SUM([Sales]), -2, 0) = covariance of SUM(Profit) and SUM(Sales) from the 2 previous rows to the current row"
WINDOW_CORR,"WINDOW_CORR(expr1, expr2, [start, end])","Returns the Pearson correlation coefficient of two expressions within the window. The window is defined as offsets from the current row. Use FIRST() + n and LAST() - n for offsets from the first or last row in the partition. If start and end are omitted, the entire partition is . Example: WINDOW_CORR(SUM[Profit]), SUM([Sales]), -5, 0) = Pearson correlation coefficient of SUM(Profit) and SUM(Sales) from the 5 previous rows to the current row"
RUNNING_AVG,RUNNING_AVG(expression),"Returns the running average of the given expression, from the first row in the partition to the current . Example: RUNNING_AVG(SUM([Profit])) = running average of SUM(Profit)"
RUNNING_COUNT,RUNNING_COUNT(expression),"Returns the running count of the given expression, from the first row in the partition to the current . Example: RUNNING_COUNT(SUM([Profit])) = running count of SUM(Profit)"
RUNNING_MAX,RUNNING_MAX(expression),"Returns the running maximum of the given expression, from the first row in the partition to the current . Example: RUNNING_MAX(MAX([Profit])) = running maximum . ProfitExample: RUNNING_MAX(SUM([Profit])) = running maximum of SUM(Profit)"
RUNNING_MIN,RUNNING_MIN(expression),"Returns the running minimum of the given expression, from the first row in the partition to the current . Example: RUNNING_MIN(MIN([Profit])) = running minimum . ProfitExample: RUNNING_MIN(SUM([Profit])) = running minimum of SUM(Profit)"
RUNNING_SUM,RUNNING_SUM(expression),"Returns the running sum of the given expression, from the first row in the partition to the current . Example: RUNNING_SUM(SUM([Profit])) = running sum . ProfitExample: RUNNING_SUM(COUNT([Profit])) = running count of Profit"
RANK_PERCENTILE,"RANK_PERCENTILE(expression, ['asc'|'desc'])","Returns the percentile rank for the current row in the partition. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default order is . With this function, the set of values (6, 9, 9, 14) would be ranked (0.00, 0.67, 0.67, 1.00) in ascending . Example: RANK_PERCENTILE(AVG([Test Score]))"
RANK_DENSE,"RANK_DENSE(expression, ['asc'|'desc'])","Returns the dense rank for the current row in the partition. Identical values are assigned an identical rank, but no gaps are inserted into the number sequence. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default order is . With this function, the set of values (6, 9, 9, 14) would be ranked (1, 2, 2, 3) in ascending . Example: RANK_DENSE(SUM([Sales]))"
RANK,"RANK(expression, ['asc'|'desc'])","Returns the standard competition rank for the current row in the partition. Identical values are assigned an identical rank. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default order is . With this function, the set of values (6, 9, 9, 14) would be ranked (1, 2, 2, 4) in ascending . Example: RANK(AVG([Lap Time]))"
RANK_MODIFIED,"RANK_MODIFIED(expression, ['asc'|'desc'])","Returns the modified competition rank for the current row in the partition. Identical values are assigned an identical rank. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default order is . With this function, the set of values (6, 9, 9, 14) would be ranked (1, 3, 3, 4) in ascending . Example: RANK_MODIFIED(AVG([Velocity]))"
RANK_UNIQUE,"RANK_UNIQUE(expression, ['asc'|'desc'])","Returns the unique rank for the current row in the partition. Identical values are assigned different ranks. Use the optional 'asc' | 'desc' argument to specify ascending or descending order. The default order is . With this function, the set of values (6, 9, 9, 14) would be ranked (1, 2, 3, 4) in ascending . Example: RANK_UNIQUE() = 1 for the first row in the partition"
MODEL_PERCENTILE,"MODEL_PERCENTILE(target_expression, predictor_expression(s)) or MODEL_PERCENTILE(model, target_expression, predictor_expression(s))","Returns the probability (between 0 and 1) of the expected value being less than or equal to the observed mark, defined by the target expression and other predictors. This is the Posterior Predictive Distribution Function, also known as the Cumulative Distribution Function (CDF). Example: MODEL_PERCENTILE(SUM([Sales]), COUNT([Orders])) = the quantile of the mark for sum of sales, adjusted for count of orders."
MODEL_QUANTILE,"MODEL_QUANTILE(quantile, target_expression, predictor_expression(s)) or MODEL_QUANTILE(model, quantile, target_expression, predictor_expression(s))","Returns a target numeric value within the probable range defined by the target expression and other predictors, at a specified quantile. This is the Posterior Predictive Quantile. Example: MODEL_QUANTILE(0.5, SUM([Sales]), COUNT([Orders])) = the median (quantile = 0.5) predicted sum of sales, adjusted for count of orders."
